/*  * This is the source code of Telegram for Android v. 5.x.x.  * It is licensed under GNU GPL v. 2 or later.  * You should have received a copy of the license in this archive (see LICENSE).  *  * Copyright Nikolai Kudashov, 2013-2018.  */

package com.github.gdev2018.master.utils.PlaborException;

/**
 * Created by RET on 21.03.2018.
 */



public enum StandardErrorCode
        implements ErrorCodeSupplier
{
    //---- custum types 1xxx
    ARRAY_INDEX(0x0000_1000, ErrorType.USER_ERROR),

    //---- standard types
    GENERIC_USER_ERROR(0x0000_0000, ErrorType.USER_ERROR),
    SYNTAX_ERROR(0x0000_0001, ErrorType.USER_ERROR),
    ABANDONED_QUERY(0x0000_0002, ErrorType.USER_ERROR),
    USER_CANCELED(0x0000_0003, ErrorType.USER_ERROR),
    PERMISSION_DENIED(0x0000_0004, ErrorType.USER_ERROR),
    NOT_FOUND(0x0000_0005, ErrorType.USER_ERROR),
    FUNCTION_NOT_FOUND(0x0000_0006, ErrorType.USER_ERROR),
    INVALID_FUNCTION_ARGUMENT(0x0000_0007, ErrorType.USER_ERROR),             // caught by TRY
    DIVISION_BY_ZERO(0x0000_0008, ErrorType.USER_ERROR),                      // caught by TRY
    INVALID_CAST_ARGUMENT(0x0000_0009, ErrorType.USER_ERROR),                 // caught by TRY
    OPERATOR_NOT_FOUND(0x0000_000A, ErrorType.USER_ERROR),
    INVALID_VIEW(0x0000_000B, ErrorType.USER_ERROR),
    ALREADY_EXISTS(0x0000_000C, ErrorType.USER_ERROR),
    NOT_SUPPORTED(0x0000_000D, ErrorType.USER_ERROR),
    INVALID_SESSION_PROPERTY(0x0000_000E, ErrorType.USER_ERROR),
    INVALID_WINDOW_FRAME(0x0000_000F, ErrorType.USER_ERROR),
    CONSTRAINT_VIOLATION(0x0000_0010, ErrorType.USER_ERROR),
    TRANSACTION_CONFLICT(0x0000_0011, ErrorType.USER_ERROR),
    INVALID_TABLE_PROPERTY(0x0000_0012, ErrorType.USER_ERROR),
    NUMERIC_VALUE_OUT_OF_RANGE(0x0000_0013, ErrorType.USER_ERROR),            // caught by TRY
    UNKNOWN_TRANSACTION(0x0000_0014, ErrorType.USER_ERROR),
    NOT_IN_TRANSACTION(0x0000_0015, ErrorType.USER_ERROR),
    TRANSACTION_ALREADY_ABORTED(0x0000_0016, ErrorType.USER_ERROR),
    READ_ONLY_VIOLATION(0x0000_0017, ErrorType.USER_ERROR),
    MULTI_CATALOG_WRITE_CONFLICT(0x0000_0018, ErrorType.USER_ERROR),
    AUTOCOMMIT_WRITE_CONFLICT(0x0000_0019, ErrorType.USER_ERROR),
    UNSUPPORTED_ISOLATION_LEVEL(0x0000_001A, ErrorType.USER_ERROR),
    INCOMPATIBLE_CLIENT(0x0000_001B, ErrorType.USER_ERROR),
    SUBQUERY_MULTIPLE_ROWS(0x0000_001C, ErrorType.USER_ERROR),
    PROCEDURE_NOT_FOUND(0x0000_001D, ErrorType.USER_ERROR),
    INVALID_PROCEDURE_ARGUMENT(0x0000_001E, ErrorType.USER_ERROR),
    QUERY_REJECTED(0x0000_001F, ErrorType.USER_ERROR),
    AMBIGUOUS_FUNCTION_CALL(0x0000_0020, ErrorType.USER_ERROR),
    INVALID_SCHEMA_PROPERTY(0x0000_0021, ErrorType.USER_ERROR),
    SCHEMA_NOT_EMPTY(0x0000_0022, ErrorType.USER_ERROR),
    QUERY_TEXT_TOO_LARGE(0x0000_0023, ErrorType.USER_ERROR),
    UNSUPPORTED_SUBQUERY(0x0000_0024, ErrorType.USER_ERROR),
    EXCEEDED_FUNCTION_MEMORY_LIMIT(0x0000_0025, ErrorType.USER_ERROR),
    ADMINISTRATIVELY_KILLED(0x0000_0026, ErrorType.USER_ERROR),

    GENERIC_INTERNAL_ERROR(0x0001_0000, ErrorType.INTERNAL_ERROR),
    TOO_MANY_REQUESTS_FAILED(0x0001_0001, ErrorType.INTERNAL_ERROR),
    PAGE_TOO_LARGE(0x0001_0002, ErrorType.INTERNAL_ERROR),
    PAGE_TRANSPORT_ERROR(0x0001_0003, ErrorType.INTERNAL_ERROR),
    PAGE_TRANSPORT_TIMEOUT(0x0001_0004, ErrorType.INTERNAL_ERROR),
    NO_NODES_AVAILABLE(0x0001_0005, ErrorType.INTERNAL_ERROR),
    REMOTE_TASK_ERROR(0x0001_0006, ErrorType.INTERNAL_ERROR),
    COMPILER_ERROR(0x0001_0007, ErrorType.INTERNAL_ERROR),
    REMOTE_TASK_MISMATCH(0x0001_0008, ErrorType.INTERNAL_ERROR),
    SERVER_SHUTTING_DOWN(0x0001_0009, ErrorType.INTERNAL_ERROR),
    FUNCTION_IMPLEMENTATION_MISSING(0x0001_000A, ErrorType.INTERNAL_ERROR),
    REMOTE_BUFFER_CLOSE_FAILED(0x0001_000B, ErrorType.INTERNAL_ERROR),
    SERVER_STARTING_UP(0x0001_000C, ErrorType.INTERNAL_ERROR),
    FUNCTION_IMPLEMENTATION_ERROR(0x0001_000D, ErrorType.INTERNAL_ERROR),
    INVALID_PROCEDURE_DEFINITION(0x0001_000E, ErrorType.INTERNAL_ERROR),
    PROCEDURE_CALL_FAILED(0x0001_000F, ErrorType.INTERNAL_ERROR),
    AMBIGUOUS_FUNCTION_IMPLEMENTATION(0x0001_0010, ErrorType.INTERNAL_ERROR),
    ABANDONED_TASK(0x0001_0011, ErrorType.INTERNAL_ERROR),
    CORRUPT_SERIALIZED_IDENTITY(0x0001_0012, ErrorType.INTERNAL_ERROR),
    CORRUPT_PAGE(0x0001_0013, ErrorType.INTERNAL_ERROR),
    OPTIMIZER_TIMEOUT(0x0001_0014, ErrorType.INTERNAL_ERROR),
    OUT_OF_SPILL_SPACE(0x0001_0015, ErrorType.INTERNAL_ERROR),
    REMOTE_HOST_GONE(0x0001_0016, ErrorType.INTERNAL_ERROR),
    CONFIGURATION_INVALID(0x0001_0017, ErrorType.INTERNAL_ERROR),
    CONFIGURATION_UNAVAILABLE(0x0001_0018, ErrorType.INTERNAL_ERROR),
    NOT_ENOUGH_ACTIVE_NODES(0x0001_0019, ErrorType.INTERNAL_ERROR),

    GENERIC_INSUFFICIENT_RESOURCES(0x0002_0000, ErrorType.INSUFFICIENT_RESOURCES),
    EXCEEDED_MEMORY_LIMIT(0x0002_0001, ErrorType.INSUFFICIENT_RESOURCES),
    QUERY_QUEUE_FULL(0x0002_0002, ErrorType.INSUFFICIENT_RESOURCES),
    EXCEEDED_TIME_LIMIT(0x0002_0003, ErrorType.INSUFFICIENT_RESOURCES),
    CLUSTER_OUT_OF_MEMORY(0x0002_0004, ErrorType.INSUFFICIENT_RESOURCES),
    EXCEEDED_CPU_LIMIT(0x0002_0005, ErrorType.INSUFFICIENT_RESOURCES),
    EXCEEDED_SPILL_LIMIT(0x0002_0006, ErrorType.INSUFFICIENT_RESOURCES),
    /**/;

    // Connectors can use error codes starting at the range 0x0100_0000
    // See https://github.com/prestodb/presto/wiki/Error-Codes

    private final ErrorCode errorCode;

    StandardErrorCode(int code, ErrorType type)
    {
        errorCode = new ErrorCode(code, name(), type);
    }

    @Override
    public ErrorCode toErrorCode()
    {
        return errorCode;
    }
}

